@startuml

title __MEASURER's Class Diagram__\n

  namespace rerank.fusion.measurer {
    class rerank.fusion.measurer.AvgDistanceMeasurer {
        ~ distances : double[][][]
        ~ imgIds : ArrayList<String>
        ~ topic : ArrayList<String>
        + getAvgDescDist()
        + getMeasureValue()
        + setDistances()
        + setImgIds()
        + setTopic()
    }
  }
  

  namespace rerank.fusion.measurer {
    class rerank.fusion.measurer.AvgWeightedDistanceMeasurer {
        ~ distances : double[][][]
        ~ imgIds : ArrayList<String>
        ~ topic : ArrayList<String>
        + getAvgDescDist()
        + getMeasureValue()
        + setDistances()
        + setImgIds()
        + setTopic()
    }
  }
  

  namespace rerank.fusion.measurer {
    class rerank.fusion.measurer.MaxDistanceMeasurer {
        ~ distances : double[][][]
        ~ imgIds : ArrayList<String>
        ~ topic : ArrayList<String>
        + getAvgDist()
        + getMeasureValue()
        + setDistances()
        + setImgIds()
        + setTopic()
    }
  }
  

  namespace rerank.fusion.measurer {
    class rerank.fusion.measurer.MaxWeightedDistanceMeasurer {
        ~ distances : double[][][]
        ~ imgIds : ArrayList<String>
        ~ topic : ArrayList<String>
        + getAvgDescDist()
        + getMeasureValue()
        + setDistances()
        + setImgIds()
        + setTopic()
    }
  }
  

  namespace rerank.fusion.measurer {
    class rerank.fusion.measurer.MinDistanceMeasurer {
        ~ distances : double[][][]
        ~ imgIds : ArrayList<String>
        ~ topic : ArrayList<String>
        + getAvgDist()
        + getMeasureValue()
        + getProdDescDist()
        + setDistances()
        + setImgIds()
        + setTopic()
    }
  }
  

  namespace rerank.fusion.measurer {
    class rerank.fusion.measurer.MinWeightedDistanceMeasurer {
        ~ distances : double[][][]
        ~ imgIds : ArrayList<String>
        ~ topic : ArrayList<String>
        + getAvgDescDist()
        + getMeasureValue()
        + getProdDescDist()
        + setDistances()
        + setImgIds()
        + setTopic()
    }
  }
  

  namespace rerank.fusion.measurer {
    class rerank.fusion.measurer.ProdDistanceMeasurer {
        ~ distances : double[][][]
        ~ imgIds : ArrayList<String>
        ~ topic : ArrayList<String>
        + getAvgDescDist()
        + getMeasureValue()
        + setDistances()
        + setImgIds()
        + setTopic()
    }
  }
  

  namespace rerank.fusion.measurer {
    class rerank.fusion.measurer.ProdWeightedDistanceMeasurer {
        ~ distances : double[][][]
        ~ imgIds : ArrayList<String>
        ~ topic : ArrayList<String>
        + getAvgDescDist()
        + getMeasureValue()
        + setDistances()
        + setImgIds()
        + setTopic()
    }
  }
  

  rerank.fusion.measurer.AvgDistanceMeasurer .up.|> IDigitalObjectDistanceMeasurer
  rerank.fusion.measurer.AvgWeightedDistanceMeasurer .up.|> IDigitalObjectDistanceMeasurer
  rerank.fusion.measurer.MaxDistanceMeasurer .up.|> IDigitalObjectDistanceMeasurer
  rerank.fusion.measurer.MaxWeightedDistanceMeasurer .up.|> IDigitalObjectDistanceMeasurer
  rerank.fusion.measurer.MinDistanceMeasurer .up.|> IDigitalObjectDistanceMeasurer
  rerank.fusion.measurer.MinWeightedDistanceMeasurer .up.|> IDigitalObjectDistanceMeasurer
  rerank.fusion.measurer.ProdDistanceMeasurer .up.|> IDigitalObjectDistanceMeasurer
  rerank.fusion.measurer.ProdWeightedDistanceMeasurer .up.|> IDigitalObjectDistanceMeasurer


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
